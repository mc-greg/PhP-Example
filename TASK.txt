The Task:

- Create a PHP web application to document a collection you have (or want to have) - books, movies, songs, recipes, postage stamps, trains, cars, action figures, gaming figures, whatever floats your boat.

 - There must be a list of all items.

 - There must be detail pages for each item.

- CRUD is not required, the only requirement is that the collection be browseable.



You Must:

- Write error-, warning-, and notice-free code that will run on PHP 5.5.  error_reporting will be set to -1.

- Use object oriented techniques.  The code does not need to be OO throughout - a procedural base that uses objects intelligently is perfectly fine, as that is what we're working with here.

- Store data in MySQL, PostgreSQL or SQLite.  Your choice.

- Include a database dump of your collection with the code.

- Try not to spend excessive amounts of time on this task.  Try to plan for this to take about an hour, and design appropriately.

- Write code you are proud to attach your name to.



You May:

- Use fake data instead of documenting a collection you actually have.

- Use any third-party library code as you see fit, or not at all.  Your choice.  The application itself must be 100% your work, and there must be a clear delineation between library code and your work.

- Add CRUD operations, if time permits.

- Make the code able to switch between MySQL, PostgreSQL or SQLite.  Bonus points for not using an SQL generator or ORM to achieve this.

- Publish this example on a code sharing site (Github, Bitbucket, etc) and/or use it as your code sample in the future.



You May Not:

- Over-complicate.  This is supposed to be a simple example code task.

- Publish this specification.



Judging:

- You will be judged on the style of your code and how easy it is to understand, extend, modify, and adapt.

- Your use of objects will be judged against both the constraints of reality and the ideals of the SOLID principles.  Please look those up if you aren't familiar with them.

 - The libraries you use, or do not use, will be judged.

- You will not be judged on how visually attractive the application itself is.  Usability matters, looks don't.
